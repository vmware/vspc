participant "Source vm" as src
participant vSPC
participant "Destination vm" as dst

note over src: Power On or "connect" operation
src->vSPC: connect
opt async
 vSPC->src: connected
 note over vSPC src: Telnet negotiation (ECHO, BINARY, SGA, AUTH)
 vSPC->src: DO VMWARE-EXT
 note over vSPC src: VMWARE-TELNET-EXT negotiation
 src->vSPC: DO PROXY
 vSPC->src: WILL PROXY
 src->vSPC: WILL COMPORT
 vSPC->src: DONT COMPORT (usually)
end
src-->vSPC: Serial port data
note over src vSPC: \nTime passes...\n
note over src: vMotion requested
src->dst: vMotion preparation (might take seconds/minutes or longer)
state over src: Prepare to save\nvMotion downtime begins now!
src->vSPC: VMOTION-BEGIN(id)
alt async - vSPC rejects
 vSPC->src: VMOTION-NOTNOW(id)
else async - vSPC accepts
 vSPC->src: VMOTION-GOAHEAD(id, secret)
end
note over src: Wait for VMOTION-GOAHEAD if necessary
opt failure to receive VMOTION-GOAHEAD within timeout
 state over src: Resume execution
 src->dst: vMotion failure
 note over src: Source VM continues running
 note over dst: Destination VM terminates
 src-->vSPC: Serial port data
end
src->dst: vMotion transfers final VM state (incl. id, secret) to destination
dst->vSPC: connect
opt async
 vSPC->dst: connected
 note over vSPC dst: Telnet negotiation (ECHO, BINARY, SGA, AUTH)
 vSPC->dst: DO VMWARE-EXT
 note over vSPC dst: VMWARE-TELNET-EXT negotiation
 dst->vSPC: VMOTION-PEER(id, secret)
 vSPC->dst: VMOTION-PEER-OK(id)
end
note over dst: Wait for VMOTION_PEER_OK if necessary
opt failure to reach VS_PEER_ACCEPTED within timeout
 dst->src: vMotion failure
 note over dst: Destination VM terminates
 state over src: Resume execution
 src->vSPC: VMOTION-ABORT
 note over src: Source VM continues running
 src-->vSPC: Serial port data
end
dst->vSPC: VMOTION-COMPLETE
note over dst: Resume execution\nvMotion downtime ends now!
dst->src: vMotion success
destroy src
note over src: Source VM terminated
note over dst: Destination VM is running
dst-->vSPC: Serial port data
